apply plugin: "maven"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version= project.hasProperty('in_version') ? project.getProperty('in_version') : '-SNAPSHOT'
group = "wf.frk.f3b"


def v_jme3="-SNAPSHOT"
def v_slf4j="1.7.7"
def v_lombok="1.16.8"

def v_protocol="-SNAPSHOT"
def v_physicsloader="-SNAPSHOT"
def g_physicsloader="wf.frk.jme3"


if(project.hasProperty('in_v_physicsloader') ){
	v_physicsloader=project.getProperty('in_v_physicsloader')
    println("Use physics loader v"+v_physicsloader)
}

if(project.hasProperty('in_v_protocol') ){
	v_protocol=project.getProperty('in_v_protocol')
        println("Use protocol v"+v_protocol)

}

if(project.hasProperty('in_g_physicsloader') ){
	g_physicsloader=project.getProperty('in_g_physicsloader')
            println("Use physics loader from group "+g_physicsloader)

}


targetCompatibility = '1.7'
sourceCompatibility = '1.7'
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories{
	mavenLocal()
	maven {
        url "http://127.0.0.1:48889/"
    }
    maven {
        url "http://192.168.2.20:8000/"
    }
    maven {
        url "https://maven.frk.wf/"
    }
	jcenter()

	mavenCentral()
	maven{ url "http://dl.bintray.com/riccardo/v-hacd" }
	maven{ url "http://dl.bintray.com/riccardo/f3b" }
	maven { url "https://jitpack.io" }
}

javadoc {
  source = sourceSets.main.allJava
  classpath = configurations.compileClasspath
}


task dumper(type: JavaExec) {
     standardInput = System.in

    main ='wf.frk.f3b.tools.F3bDumper'
    classpath file("${rootDir}/build/classes/java/main")
    classpath  sourceSets.main.compileClasspath
  
}


// task delombok{
//     description 'Delomboks the entire source code tree'
//     def srcDelomboked = 'build/src-delomboked'
//     def srcJava = 'src'

//     inputs.files file( srcJava )
//     outputs.dir file( srcDelomboked )

//     doLast {
//         def collection = files( configurations.compile + configurations.testCompile )
//         def sumTree = collection + fileTree( dir: 'bin' )

//         ant.taskdef( name: 'delombok', classname: 'lombok.delombok.ant.Tasks$Delombok', 
//             classpath: configurations.compile.asPath +
//                        configurations.testCompile.asPath )
//         ant.delombok( from:srcJava, to:srcDelomboked, classpath: sumTree.asPath )


//         // Replace current src directory with delomboked source
//         copy {
//             from srcDelomboked
//             into srcJava
//         }
//     }
// }


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava (MavenPublication) { 
            from components.java
            artifact sourceJar {
                    classifier "sources"
            }
            artifact packageJavadoc
        }
    }
}



dependencies {
	compile 'com.google.protobuf:protobuf-java:2.6.1'
	compile "wf.frk.f3b:f3b:${v_protocol}"
	
	compile "${g_physicsloader}:jme3_physicsloader:${v_physicsloader}"
		
//  compile group:'org.projectlombok', name: 'lombok', version: '1.18.0'	
	compile "org.apache.logging.log4j:log4j-api:2.2"
    compile "org.apache.logging.log4j:log4j-core:2.2"
    
    compileOnly "org.jmonkeyengine:jme3-core:${v_jme3}"
    compileOnly "org.jmonkeyengine:jme3-bullet:${v_jme3}"
    
	testCompile "org.jmonkeyengine:jme3-lwjgl:${v_jme3}"
	testCompile "org.jmonkeyengine:jme3-desktop:${v_jme3}"
	testCompile "org.jmonkeyengine:jme3-bullet:${v_jme3}"
	testCompile "org.jmonkeyengine:jme3-bullet-native:${v_jme3}"
	testCompile 'com.github.riccardobl:jme3-bullet-vhacd:-SNAPSHOT'
	testCompile 'junit:junit:4.12'
}

